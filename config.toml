[server]
host = "0.0.0.0"
port = 8080
workers = 4
max_connections = 10000
keepalive_timeout = 30
request_timeout = 30
graceful_shutdown_timeout = 30

[gateway]
name = "mcp-gateway"
version = "0.1.0"
environment = "development"

[gateway.load_balancing]
default_strategy = "round_robin"
sticky_sessions = false
session_cookie_name = "MCPGATEWAY_SESSION"

[gateway.circuit_breaker]
enabled = true
failure_threshold = 5
recovery_timeout = 30
min_request_threshold = 10
error_rate_threshold = 0.5

[gateway.retry]
enabled = true
max_attempts = 3
backoff_strategy = "exponential"
initial_delay = 100
max_delay = 5000
multiplier = 2.0

[gateway.cache]
enabled = false
ttl = 300
max_size = 1000
# redis_url = "redis://localhost:6379"

# Example upstream groups
[upstream.groups.default]
strategy = "round_robin"

[[upstream.groups.default.servers]]
id = "mcp-server-1"
url = "ws://localhost:3001"
weight = 100
max_requests = 1000
backup = false

[[upstream.groups.default.servers]]
id = "mcp-server-2"
url = "ws://localhost:3002"
weight = 100
max_requests = 1000
backup = false

# Example tool servers
[upstream.groups.tools]
strategy = "weighted_round_robin"

[[upstream.groups.tools.servers]]
id = "file-tools"
url = "ws://localhost:4001"
weight = 200
backup = false

[[upstream.groups.tools.servers]]
id = "web-tools"
url = "ws://localhost:4002"
weight = 100
backup = false

# Health check configuration
[upstream.health_check]
enabled = true
interval = 30
timeout = 5
path = "/health"
method = "GET"
expected_status = 200
healthy_threshold = 2
unhealthy_threshold = 3

[upstream.connection_pool]
max_idle_per_host = 32
max_connections_per_host = 128
idle_timeout = 90
connect_timeout = 10

# Security configuration
[security.auth]
enabled = false
jwt_secret = "your-super-secret-jwt-signing-key-here"
jwt_issuer = "mcp-gateway"
jwt_audience = "mcp-clients"
jwt_expiration = 3600
api_key_header = "X-API-Key"

# Uncomment to enable basic auth
# [security.auth.basic_auth_users]
# admin = "password123"
# user = "userpass"

[security.cors]
enabled = true
allowed_origins = ["*"]
allowed_methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
allowed_headers = ["*"]
max_age = 3600
allow_credentials = false

[security.rate_limiting]
enabled = false
requests_per_minute = 1000
burst_size = 100
key_strategy = "ip_address"

# TLS configuration (optional)
# [security.tls]
# cert_file = "/path/to/cert.pem"
# key_file = "/path/to/key.pem"
# ca_file = "/path/to/ca.pem"
# verify_client = false

# Metrics configuration
[metrics]
enabled = true
host = "0.0.0.0"
port = 9090
path = "/metrics"
histogram_buckets = [0.001, 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5.0, 10.0]

# Prometheus push gateway (optional)
# [metrics.push_gateway]
# url = "http://localhost:9091"
# interval = 15
# job_name = "mcp-gateway"
# instance = "gateway-1"

# Logging configuration
[logging]
level = "info"
format = "json"
output = "stdout"
# file_path = "/var/log/mcp-gateway.log"
# max_file_size = 104857600  # 100MB
# max_files = 10
structured = true

# Middleware configuration
[middleware.request_id]
enabled = true
header_name = "X-Request-ID"
generate_if_missing = true

[middleware.compression]
enabled = true
algorithms = ["gzip", "deflate"]
min_size = 1024

[middleware.timeout]
request = 30
upstream = 30
keepalive = 60

# Example routes configuration
[[gateway.routes]]
id = "mcp-api"
path = "/mcp"
method = "GET"
upstream_group = "default"
timeout = 30
auth_required = false

[[gateway.routes]]
id = "tools-api"
path = "/tools/*"
upstream_group = "tools"
timeout = 60
auth_required = false

# Example rate limiting per route
# [gateway.routes.tools-api.rate_limit]
# requests_per_minute = 100
# burst_size = 20
# key_strategy = "ip_address"

# Example request transformation
# [[middleware.transform]]
# name = "add_headers"
# enabled = true
# [middleware.transform.config]
# headers = { "X-Gateway-Version" = "0.1.0" }
